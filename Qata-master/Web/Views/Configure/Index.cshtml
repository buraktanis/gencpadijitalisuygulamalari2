@model Entities.DTOs.ConfigurationTypeDto
@{
    ViewData["Title"] = "Index";
}

<div class="">
    <div class="">
        <div class="bg-white  ">
            <h2 class="pt-3 pb-4 pl-4"><strong>@Model.Name</strong><i class="fas fa-arrow-left  border p-2  rounded-circle border-primary text-primary float-right" style="margin-right:2%;"></i></h2>
        </div>
      
    </div>
</div>


    <div class="bg-white  mt-4" style="margin-left:2%;margin-right:2%;">
        <div class="row bg-white rounded">
            <div class="col-sm-12">
                <div class="col-md-6"></div>
                <div class="col-md-6 float-right pt-4 p-2 ">
                    <a href="/Configure/NewConfiguration/@Model.Id"> <i class="fa  fa-plus border p-2 mr-1 rounded-circle border-primary  btn-outline-primary float-right"></i></a>
                    @*<i class="fas fa-filter border  p-2 mr-1 rounded-circle border-warning btn-outline-warning float-right"></i>
                    <i class="fa  fa-ellipsis-h border p-2 mr-1 rounded-circle btn-outline-secondary float-right"></i>*@
                </div>


            </div>
            <hr class="container-fluid bg-light pl-5">
        
            <div class="col-sm-12">
                <table id="recordtable" class="table table-bordered pt-0 pb-0">
                    <thead class="thead-light">
                        <tr>
                            <th class="pt-1 pb-1">Name</th>
                            <th class="pt-1 pb-1">Açıklama</th>
                            <th class="pt-1 pb-1"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="col-sm-1">Name</td>
                            <td class="col-sm-1"><i class="fa fa-ellipsis-v border border-info p-2 btn-outline-info " style="border-radius:30%;"></i></td>
                        </tr>

                    </tbody>
                </table>

            </div>
            <div class="col-sm-12 text-center">
                <p>Toplam <strong>2</strong>  adet kayıt var.</p>
            </div>
        </div>
    </div>

  






    @section Scripts{

        <script type="text/javascript">
        var configurationType = "@Model.Id"
            var recordtable;
            var stock = 0;
            var toplammaliyet = 0;
            var stockdizi = [];
            var toplammaliyetdizi = [];
            var toplammaliyetdizi = [];
            $(function () {

                ///  $('#recordtable1_paginate').hide();

                recordtable = $('#recordtable').DataTable({
                    "responsive": true,
                    "serverSide": true,
                    "searching": true,
                    "lengthChange": false,
                    //"jQueryUI": true,
                    "stateSave": false,
                    "pagingType": "full_numbers",
                    "ajax": {
                        "url": "/Configure/GetConfigurationDatatables",
                        "type": "POST",
                        "contentType": "application/json; charset=utf-8",
                        "data": function (d) {
                            d.additionalvalues = [configurationType];
                            return JSON.stringify(d);
                        }
                    },
                    "columns": [
                        {
                            "data": "Name"
                        },
                        {
                            "data": "Info"
                        },
                        {
                            "data": "Id", className: "text-center", "render": function (data, type, row) {
                                var html = "" + "<a data-id='" + data + "' class='btn btn-warning   btn-sm text-white  detail' href='/Configure/UpdateConfiguration/" + data + "'>Güncelle</a>"
                                    + "<a data-id='" + data + "' class='btn btn-danger  btn-sm text-white  delete'>Sil</a>"

                                return html;
                            }
                        }
                    ]
                    ,
                    "rowCallback": function (row, data) {

                        /*  toplammaliyetdizi.push((data.fiyat * data.adet))*/

                    }, "drawCallback": function (settings) {

                        //toplammaliyet = 0;


                        //toplammaliyetdizi.forEach((element) => {
                        //    toplammaliyet = toplammaliyet + element;

                        //})

                        //$('#toplammaliyet').html(" Toplam: " + numeral(toplammaliyet).format('0,0') + " TL")

                        //toplammaliyetdizi = [];



                    }

                });


                $(".dataTable tbody").on("click", "a.delete", function () {
                    var id = $(this).attr("data-id");

                    $.confirm({
                        title: 'Sil?',
                        content: 'Bu kaydı silmek istediğinize emin misiniz?',
                        autoClose: 'cancelAction|8000',
                        buttons: {
                            deleteUser: {
                                text: 'Evet',
                                action: function () {
                                    $.LoadingOverlay("show");
                                    $.ajax({
                                        type: "Get",
                                        url: "/Configure/DeleteConfiguration/" + id,
                                        contentType: "application/json; charset=utf-8",
                                        dataType: "json",
                                        success: function (msg) {

                                            $.LoadingOverlay("hide");
                                            if (msg.success) {
                                                recordtable.draw();
                                                utilities.onscreen(utilities.dil_ceviri("Silindi", "kayit_basarili"));

                                            } else {
                                                recordtable.draw();
                                                $.alert(msg.errors.map(e => e.message).join());
                                            }



                                        }
                                    });
                                }
                            }, cancelAction: {
                                text: 'Hayır',
                                action: function () {


                                }
                            }
                        }
                    });
                  



                });


            });

        </script>

    }
